# The configuration file for the Amass tool used for DNS enumeration and network discovery.

# Should results only be collected passively and without DNS resolution? Not recommended.
#mode = passive

# Would you like to use active techniques that communicate directly with the discovered assets,
# such as pulling TLS certificates from discovered IP addresses and attempting DNS zone transfers?
#mode = active

# The directory that stores the Cayley graph database and other output files.
# The default for Linux systems is: $HOME/.config/amass
#output_directory = amass

# Another location (directory) where the user can provide ADS scripts to the engine.
#scripts_directory =

# The maximum number of DNS queries that can be performed concurrently during the enumeration.
#maximum_dns_queries = 20000

# DNS resolvers used globally by the amass package.
[resolvers]
;resolver = 1.1.1.1 ; Cloudflare
;resolver = 8.8.8.8 ; Google
;resolver = 64.6.64.6 ; Verisign
;resolver = 74.82.42.42 ; Hurricane Electric
;resolver = 1.0.0.1 ; Cloudflare Secondary
;resolver = 8.8.4.4 ; Google Secondary
;resolver = 64.6.65.6 ; Verisign Secondary
;resolver = 77.88.8.8 ; Yandex.DNS Secondary

[scope]
# The network infrastructure settings expand scope, not restrict the scope.
# Single IP address or range (e.g., a.b.c.10-245)
#address = 192.168.1.1
#cidr = 192.168.1.0/24
#asn = 26808

port = 80
port = 443
#port = 8080
#port = 8443

# Root domain names used in the enumeration. The findings are limited by the root domain names provided.
#[scope.domains]
#domain = owasp.org
#domain = appsecusa.org
#domain = appsec.eu
#domain = appsec-labs.com

# Are there any subdomains that are out of scope?
#[scope.blacklisted]
#subdomain = education.appsec-labs.com
#subdomain = 2012.appsecusa.org

# The graph database discovered DNS names, associated network infrastructure, results from data sources, etc.
# This information is then used in future enumerations and analysis of the discoveries.
#[graphdbs]
# postgres://[username:password@]host[:port]/database-name?sslmode=disable of the PostgreSQL
# database and credentials. Sslmode is optional and can be disable, require, verify-ca, or verify-full.
#[graphdbs.postgres]
#primary = false ; Specify which graph database is the primary db, or the local database will be selected.
#url = "postgres://[username:password@]host[:port]/database-name?sslmode=disable"
#options="connect_timeout=10"

# MySQL database and credentials URL format:
# [username:password@]tcp(host[:3306])/database-name?timeout=10s
#[graphdbs.mysql]
#url = [username:password@]tcp(host[:3306])/database-name?timeout=10s

# Settings related to DNS name brute forcing.
#[bruteforce]
#enabled = true
#recursive = true
# Number of discoveries made in a subdomain before performing recursive brute forcing: Default is 1.
#minimum_for_recursive = 1
; The configuration file for the Amass tool used for DNS enumeration and network discovery.

; Should results only be collected passively and without DNS resolution? Not recommended.
;mode = passive
; Would you like to use active techniques that communicate directly with the discovered assets,
; such as pulling TLS certificates from discovered IP addresses and attempting DNS zone transfers?
;mode = active

; The directory that stores the Cayley graph database and other output files
; The default for Linux systems is: $HOME/.config/amass
;output_directory = amass

; Another location (directory) where the user can provide ADS scripts to the engine.
;scripts_directory =

; The maximum number of DNS queries that can be performed concurrently during the enumeration.
;maximum_dns_queries = 20000

; DNS resolvers used globally by the amass package.
[resolvers]
;resolver = 1.1.1.1 ; Cloudflare
;resolver = 8.8.8.8 ; Google
;resolver = 64.6.64.6 ; Verisign
;resolver = 74.82.42.42 ; Hurricane Electric
;resolver = 1.0.0.1 ; Cloudflare Secondary
;resolver = 8.8.4.4 ; Google Secondary
;resolver = 64.6.65.6 ; Verisign Secondary
;resolver = 77.88.8.8 ; Yandex.DNS Secondary

; Recommended DNS resolvers:
; Uncomment and choose from the following resolvers or add your own:
;resolver = 1.1.1.1 ; Cloudflare
;resolver = 8.8.8.8 ; Google
;resolver = 9.9.9.9 ; Quad9
;resolver = 208.67.222.222 ; OpenDNS
;resolver = 185.228.168.168 ; CleanBrowsing

[scope]
; The network infrastructure settings expand scope, not restrict the scope.
; Single IP address or range (e.g., a.b.c.10-245)
;address = 192.168.1.1
;cidr = 192.168.1.0/24
;asn = 26808

; Specify the target ports for enumeration (uncomment to enable).
;port = 80
;port = 443
;port = 8080
;port = 8443

; Root domain names used in the enumeration. The findings are limited by the root domain names provided.
;[scope.domains]
;domain = owasp.org
;domain = appsecusa.org
;domain = appsec.eu
;domain = appsec-labs.com

; Are there any subdomains that are out of scope?
;[scope.blacklisted]
;subdomain = education.appsec-labs.com
;subdomain = 2012.appsecusa.org

; The graph database discovered DNS names, associated network infrastructure, results from data sources, etc.
; This information is then used in future enumerations and analysis of the discoveries.
;[graphdbs]
; postgres://[username:password@]host[:port]/database-name?sslmode=disable of the PostgreSQL
; database and credentials. Sslmode is optional, and can be disable, require, verify-ca, or verify-full.
;[graphdbs.postgres]
;primary = false ; Specify which graph database is the primary db, or the local database will be selected.
;url = "postgres://[username:password@]host[:port]/database-name?sslmode=disable"
;options="connect_timeout=10"

; The API keys used by the amass package.
;[apikeys]
;censys = <API_KEY>
;crtsh = <API_KEY>
;github = <API_KEY>
;passivetotal = <API_KEY>
;securitytrails = <API_KEY>
;shodan = <API_KEY>
;spyse = <API_KEY>
;urlscan = <API_KEY>
;virustotal = <API_KEY>
;wayback = <API_KEY>

; Specify which data sources are to be used by the enumeration process.
;[data_sources]
;source = alt_dns
;source = archiveis
;source = binaryedge
;source = bufferover
;source = certspotter
;source = chaos
;source = c99
;source = commoncrawl
;source = crtsh
;source = dnsdb
;source = dnsdumpster
;source = hackertarget
;source = ipinfo
;source = netcraft
;source = passivetotal
;source = ptrarchive
;source = radb
;source = riddler
;source = robtex
;source = securitytrails
;source = shodan
;source = sonar
;source = spyse
;source = subfinder
;source = threatcrowd
;source = threatminer
;source = virustotal
;source = wayback
;source = whois

; Specify which modules are to be run by the enumeration process.
;[modules]
;active = alt_dns
;active = archiveis
;active = bufferover
;active = certspotter
;active = chaos
;active = c99
;active = commoncrawl
;active = crtsh
;active = dnsdb
;active = dnsdumpster
;active = hackertarget
;active = ipinfo
;active = netcraft
;active = passivetotal
;active = ptrarchive
;active = radb
;active = riddler
;active = robtex
;active = securitytrails
;active = shodan
;active = sonar
;active = spyse
;active = subfinder
;active = threatcrowd
;active = threatminer
;active = virustotal
;active = wayback
;active = whois

; The configuration file for the Amass tool used for DNS enumeration and network discovery.

; Should results only be collected passively and without DNS resolution? Not recommended.
mode = active

; The directory that stores the Amass output files.
output_directory = /path/to/output/directory

; The maximum number of DNS queries that can be performed concurrently during the enumeration.
maximum_dns_queries = 50000

; DNS resolvers used globally by the Amass package.
[resolvers]
resolver = 1.1.1.1 ; Cloudflare
resolver = 8.8.8.8 ; Google
resolver = 9.9.9.9 ; Quad9

[scope]
; The root domain names used in the enumeration. The findings are limited by the root domain names provided.
[scope.domains]
domain = example.com
domain = subdomain.example.com

; Are there any subdomains that are out of scope?
[scope.blacklisted]
subdomain = dev.example.com
subdomain = staging.example.com

; Specify the target ports for enumeration (uncomment to enable).
;port = 80
;port = 443

; The graph database used to store the enumeration results.
;[graphdb]
;url = "bolt
; The graph database used to store the enumeration results.
;[graphdb]
;url = "bolt://localhost:7687"
;username = "neo4j"
;password = "password"

; The API keys used by certain modules (uncomment and add the keys).
;[apikeys]
;censys = <API_KEY>
;crtsh = <API_KEY>
;github = <API_KEY>
;passivetotal = <API_KEY>
;securitytrails = <API_KEY>
;shodan = <API_KEY>
;spyse = <API_KEY>
;urlscan = <API_KEY>
;virustotal = <API_KEY>
;wayback = <API_KEY>

; The configuration settings for the Amass enumeration process.
[config]
; The maximum number of seconds that the enumeration will run for.
enum_duration = 0

; The maximum number of retries to perform for failed DNS queries.
max_dns_retries = 5

; The maximum number of seconds to wait for a response from DNS queries.
timeout = 5

; Should the enumeration process run in recursive mode?
recursive = true

; Should the enumeration process include wildcard subdomains?
include_wildcard = false

; Should the enumeration process include subdomain permutations?
include_permutations = false

; Should the enumeration process include brute forcing subdomains?
include_bruteforce = false

; The wordlist used for brute forcing subdomains (path to the wordlist file).
;bruteforce_wordlist = /path/to/wordlist.txt

; Should the enumeration process generate screenshots of discovered web pages?
include_screenshots = false

; The command used for taking screenshots (path to the screenshot command).
;screenshot_command = /path/to/screenshot-command

; Should the enumeration process use DNS resolution to validate discovered subdomains?
validate_dns = true

; Should the enumeration process use active HTTP requests to validate discovered subdomains?
validate_http = false

; Should the enumeration process use active DNS queries to validate discovered subdomains?
validate_dns_active = false

; The maximum number of seconds to wait for a response from active DNS queries.
active_dns_timeout = 5

; The configuration settings for the Amass API service (uncomment to enable).
;[api]
;host = 0.0.0.0
;port = 8080
;cert_file = /path/to/cert.pem
;key_file = /path/to/key.pem
;cors_origin = *
;cors_methods = GET, POST, OPTIONS
;cors_headers = DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type

